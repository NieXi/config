" ====================================================
"   Copyright (C)2018 All rights reserved.
"
"   Author        : NieXi
"   Email         : xilemon3@gmail.com
"   File Name     : _vimrc
"   Last Modified : 2018-06-02 14:25
"   Describe      :
" ====================================================

" VimScript settings {{{
filetype indent plugin on

augroup ft_vim
    autocmd!
    au FileType vim setlocal foldmethod=marker
augroup END

" }}}

" General {{{
set autoread
set nocompatible
set nobackup
set noswapfile
set history=1024
set autochdir
" Vim 的默认寄存器和系统剪贴板共享
set clipboard+=unnamed
set mousehide       " 输入时隐藏鼠标

set whichwrap=b,s,<,>,[,]
set nobomb
set backspace=indent,eol,start whichwrap+=<,>,[,]
" 设置 alt 键不映射到菜单栏
set winaltkeys=no
set backspace=2
" }}}

" Lang & Encoding {{{
set encoding=utf-8              " Vim 内部使用的编码方式 Buffer、菜单、消息等
set fileencoding=utf-8         " Vim 当前打开文件的编码方式
set fileencodings=utf-8,gbk2312,gbk,gb18030,cp936 " Vim 启动后，按照所列顺序探测文件编码方式，匹配到了，就会设置 fileencoding 为匹配到的编码方式
"termencoding Vim 工作的终端的编码方式，GUI 模式无效

set langmenu=zh_cn.utf-8        " 设置菜单栏编码
let $LANG = 'en_US.UTF-8'
language messages zh_CN.utf-8       "解决提示信息乱码
let $LANG="zh_CN.UTF-8"
" }}}

" Plugin {{{
filetype off
set rtp+=$VIM/vimfiles/bundle/Vundle.vim
call vundle#begin('$VIM/vimfiles/bundle/')

Plugin 'VundleVim/Vundle.vim'

" Theme
Plugin 'altercation/vim-colors-solarized'
let g:solarized_termtrans=1
let g:solarized_contrast="normal"
let g:solarized_visibility="normal"

Plugin 'Lokaltog/vim-powerline'

" markdown 语法支持
Plugin 'tangledhelix/vim-octopress'

Plugin 'othree/xml.vim'

Plugin 'scrooloose/nerdtree'
map <F2> :NERDTreeToggle<CR>

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'fholgado/minibufexpl.vim'
let g:miniBufExplMapCTabSwitchBufs = 1

Plugin 'magexi/vimcdoc'

Plugin 'iamcco/markdown-preview.vim'
Plugin 'iamcco/mathjax-support-for-mkdp'

filetype on
call vundle#end()
"}}}

" GUI {{{
if has('gui_running')

    set background=dark
    colorscheme solarized

    winpos 500 100                       " 设定启动位置
    set lines=30 columns=90
    " 使用内置 tab 样式而不是 gui
    set guioptions-=e
    "不显示工具/菜单栏
    set guioptions-=T
    set guioptions-=m
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=b
    set guioptions-=R
    set nolist
    " 窗口大小
    "autocmd GUIEnter * simalt ~x		 " 设定windows下 gvim 启动时最大化
    "set guifont=Source_Code_Pro:h13:b:cANSI:qDRAFT      " 设置字体
    "set guifont=Inconsolata:h16:cANSI
    " set guifont?
    "set guifont=Consolas-with-Yahei:h14:b:cANSI:qDRAFT
    set guifont=YaHei_Consolas_Hybrid:h14:b:cANSI:qDRAFT

    set laststatus=2   "始终显示状态栏
else
    colorscheme phd
endif

set cursorline
set cursorcolumn
set hlsearch
set nu
"set relativenumber     " 设置相对行号

source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
" 分割出来的窗口位于当前窗口下边/右边
set splitbelow
set splitright
"set listchars=tab:▶\ ,eol:¬,trail:·,extends:>,precedes:<
" }}}

" Format {{{
"set foldmethod=indent
set autoindent
set smartindent
set tabstop=4   "一个 tab 键占的列数
set softtabstop=4   "敲入 tab 键时，实际占用的列数 
set expandtab       " 将制表符转换为空格
set shiftwidth=4	"自动缩进所占的列数
"set fileformat=unix     
syntax enable						
syntax on
" }}}

" Keymap {{{
" nmap--->normal vmap--->visual imap--->insert
" noremap--->非递归  cmap--->cmd umap--->删除该映射
" mapclear--->清除相关模式下的映射
" 定义快捷键的前缀, 即<Leader>
let mapleader=" "

nmap <leader>s :source $HOME/_vimrc<cr>
nmap <leader>e :e $HOME/_vimrc<cr>

map <leader>tn :tabnew<cr>
map <leader>tc :tabclose<cr>
map <leader>th :tabp<cr>
map <leader>tl :tabn<cr>

inoremap jk <esc>
"inoremap <esc> <nop>
"inoremap <C-[> <nop>

" 移动分割窗口
nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-h> <C-W>h
nmap <C-l> <C-W>l

" 正常模式下 alt+j,k,h,l 调整分割窗口大小
" 
nnoremap <M-j> :resize +5<cr>
nnoremap <M-k> :resize -5<cr>
nnoremap <M-h> :vertical resize -5<cr>
nnoremap <M-l> :vertical resize +5<cr>

" 插入模式移动光标 alt + 方向键
inoremap <M-j> <Down>
inoremap <M-k> <Up>
inoremap <M-h> <left>
inoremap <M-l> <Right>

" IDE like delete
inoremap <C-BS> <Esc>bdei

nnoremap vv ^vg_
" 转换当前行为大写
inoremap <C-u> <esc>mzgUiw`za
" 命令模式下的行首尾
cnoremap <C-a> <home>
cnoremap <C-e> <end>

nnoremap <F4> :setlocal number!<cr>
nnoremap <leader>w :set wrap!<cr>

imap <C-v> "+gP
vmap <C-c> "+y
vnoremap <BS> d
vnoremap <C-C> "+y
vnoremap <C-Insert> "+y
imap <C-V>		"+gP
map <S-Insert>		"+gP
cmap <C-V>		<C-R>+
cmap <S-Insert>		<C-R>+

exe 'inoremap <script> <C-V>' paste#paste_cmd['i']
exe 'vnoremap <script> <C-V>' paste#paste_cmd['v']

" 打开当前目录 windows
map <leader>ex :!start explorer %:p:h<CR>

" 打开当前目录CMD
map <leader>cmd :!start<cr>
" 打印当前时间
map <F3> a<C-R>=strftime("%Y-%m-%d %a %I:%M %p")<CR><Esc>

" 复制当前文件/路径到剪贴板
nmap ,fn :let @*=substitute(expand("%"), "/", "\\", "g")<CR>
nmap ,fp :let @*=substitute(expand("%:p"), "/", "\\", "g")<CR>

" 设置切换Buffer快捷键"
nnoremap <C-left> :bn<CR>
nnoremap <C-right> :bp<CR>

nnoremap <Leader>c I#<esc>

" }}}

" Other {{{
autocmd Filetype gitcommit setlocal spell textwidth=80
set vb t_vb=        " 关闭提示音
set is      " 开启即时搜索
set ignorecase
set hlsearch        " 高亮显示搜索结果
set wildmenu        " vim 自身命令行模式智能补全
set ruler			" 右下角显示光标位置的状态行
set hidden 			" 避免必须保存修改才可以跳转buffer
set foldlevel=0     " 设置折叠层次 0表示全部折叠
set mouse=a
set showmode
set showcmd
set showmatch       " 设置括号匹配
set nrformats=      " 默认10进制
"set showtabline=2  " 显示状态栏
set guicursor+=a:blinkon0       " 禁止光标闪烁
set noimdisable

"}}}

set pythonthreedll=python37.dll

" VIM 笔记
" normal 模式下输入 Q --->Ex 模式，即多行 cmd 模式
